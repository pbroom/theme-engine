import { h } from 'preact';
import { useCallback } from 'preact/hooks';
import { createClassName } from '../../utilities/create-class-name.js';
import styles from './range-slider.module.css';
export function RangeSlider({ disabled = false, increment = 1, maximum, minimum, name, onInput = function () { }, onNumericValueInput = function () { }, onValueInput = function () { }, propagateEscapeKeyDown = true, value, ...rest }) {
    const handleInput = useCallback(function (event) {
        onInput(event);
        const value = event.currentTarget.value;
        onValueInput(value, name);
        onNumericValueInput(parseFloat(value), name);
    }, [name, onInput, onNumericValueInput, onValueInput]);
    const handleKeyDown = useCallback(function (event) {
        if (event.key !== 'Escape') {
            return;
        }
        if (propagateEscapeKeyDown === false) {
            event.stopPropagation();
        }
        event.currentTarget.blur();
    }, [propagateEscapeKeyDown]);
    return (h("label", { class: createClassName([
            styles.rangeSlider,
            disabled === true ? styles.disabled : null
        ]) },
        h("input", { class: styles.input, disabled: disabled, max: maximum, min: minimum, onInput: handleInput, onKeyDown: handleKeyDown, step: increment, type: "range", value: value, ...rest }),
        h("div", { class: styles.border })));
}
//# sourceMappingURL=range-slider.js.map