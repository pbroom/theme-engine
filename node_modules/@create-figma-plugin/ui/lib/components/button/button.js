import { h } from 'preact';
import { useCallback } from 'preact/hooks';
import { createClassName } from '../../utilities/create-class-name.js';
import { LoadingIndicator } from '../loading-indicator/loading-indicator.js';
import styles from './button.module.css';
export function Button({ children, danger = false, disabled = false, fullWidth = false, loading = false, onClick, propagateEscapeKeyDown = true, secondary = false, ...rest }) {
    const handleKeyDown = useCallback(function (event) {
        if (event.key !== 'Escape') {
            return;
        }
        if (propagateEscapeKeyDown === false) {
            event.stopPropagation();
        }
        event.currentTarget.blur();
    }, [propagateEscapeKeyDown]);
    return (h("div", { class: createClassName([
            styles.button,
            secondary === true ? styles.secondary : styles.default,
            danger === true ? styles.danger : null,
            fullWidth === true ? styles.fullWidth : null,
            disabled === true ? styles.disabled : null,
            loading === true ? styles.loading : null
        ]) },
        loading === true ? (h("div", { class: styles.loadingIndicator },
            h(LoadingIndicator, null))) : null,
        h("button", { ...rest, disabled: disabled === true, onClick: disabled === true || loading === true ? undefined : onClick, onKeyDown: disabled === true || loading === true ? undefined : handleKeyDown, tabIndex: disabled === true ? -1 : 0 },
            h("div", { class: styles.children }, children))));
}
//# sourceMappingURL=button.js.map