import { h } from 'preact';
import { useCallback } from 'preact/hooks';
import { createClassName } from '../../../utilities/create-class-name.js';
import buttonStyles from '../../button/button.module.css';
import { LoadingIndicator } from '../../loading-indicator/loading-indicator.js';
import { fileComparator } from '../private/file-comparator.js';
import fileUploadButtonStyles from './file-upload-button.module.css';
export function FileUploadButton({ acceptedFileTypes, children, disabled = false, fullWidth = false, loading = false, multiple = false, onSelectedFiles, propagateEscapeKeyDown = true, secondary = false, ...rest }) {
    const handleChange = useCallback(function (event) {
        if (typeof onSelectedFiles === 'undefined') {
            return;
        }
        const files = Array.prototype.slice
            .call(event.currentTarget.files)
            .sort(fileComparator);
        onSelectedFiles(files);
    }, [onSelectedFiles]);
    const handleClick = useCallback(function (event) {
        if (disabled === true || loading === true) {
            event.preventDefault();
            return;
        }
        event.currentTarget.focus();
    }, [disabled, loading]);
    const handleKeyDown = useCallback(function (event) {
        if (event.key !== 'Escape') {
            return;
        }
        if (propagateEscapeKeyDown === false) {
            event.stopPropagation();
        }
        event.currentTarget.blur();
    }, [propagateEscapeKeyDown]);
    const handleLoadingMouseDown = useCallback(function (event) {
        event.preventDefault();
        event.currentTarget.focus();
    }, []);
    return (h("div", { class: createClassName([
            buttonStyles.button,
            secondary === true ? buttonStyles.secondary : buttonStyles.default,
            secondary === true
                ? fileUploadButtonStyles.secondary
                : fileUploadButtonStyles.default,
            fullWidth === true ? buttonStyles.fullWidth : null,
            disabled === true ? buttonStyles.disabled : null,
            disabled === true ? fileUploadButtonStyles.disabled : null,
            loading === true ? buttonStyles.loading : null
        ]) },
        loading === true ? (h("div", { class: buttonStyles.loadingIndicator },
            h(LoadingIndicator, null))) : null,
        h("input", { ...rest, accept: typeof acceptedFileTypes === 'undefined'
                ? undefined
                : acceptedFileTypes.join(','), class: fileUploadButtonStyles.input, disabled: disabled === true, multiple: multiple, onChange: disabled === true || loading === true ? undefined : handleChange, onClick: handleClick, onKeyDown: disabled === true || loading === true ? undefined : handleKeyDown, onMouseDown: loading === true ? handleLoadingMouseDown : undefined, tabIndex: disabled === true ? -1 : 0, title: "", type: "file" }),
        h("button", { disabled: disabled === true, tabIndex: -1 },
            h("div", { class: buttonStyles.children }, children))));
}
//# sourceMappingURL=file-upload-button.js.map