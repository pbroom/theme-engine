import { h } from 'preact';
import { useCallback } from 'preact/hooks';
import { createClassName } from '../../utilities/create-class-name.js';
import styles from './layer.module.css';
export function Layer({ bold = false, children, description, component = false, icon, name, onChange = function () { }, onValueChange = function () { }, propagateEscapeKeyDown = true, value, ...rest }) {
    const handleChange = useCallback(function (event) {
        const newValue = event.currentTarget.checked;
        onValueChange(newValue, name);
        onChange(event);
    }, [name, onChange, onValueChange]);
    const handleKeyDown = useCallback(function (event) {
        if (event.key !== 'Escape') {
            return;
        }
        if (propagateEscapeKeyDown === false) {
            event.stopPropagation();
        }
        event.currentTarget.blur();
    }, [propagateEscapeKeyDown]);
    return (h("label", { class: createClassName([
            styles.layer,
            bold === true ? styles.bold : null,
            component === true ? styles.component : null
        ]) },
        h("input", { ...rest, checked: value === true, class: styles.input, name: name, onChange: handleChange, onKeyDown: handleKeyDown, tabIndex: 0, type: "checkbox" }),
        h("div", { class: styles.box }),
        h("div", { class: styles.icon }, icon),
        h("div", { class: styles.children }, children),
        typeof description === 'undefined' ? null : (h("div", { class: styles.description }, description))));
}
//# sourceMappingURL=layer.js.map