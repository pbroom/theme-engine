import { h } from 'preact';
import { useCallback } from 'preact/hooks';
import { createClassName } from '../../utilities/create-class-name.js';
import styles from './icon-toggle-button.module.css';
export function IconToggleButton({ children, disabled = false, name, onChange = function () { }, onValueChange = function () { }, propagateEscapeKeyDown = true, value, ...rest }) {
    const handleChange = useCallback(function (event) {
        onValueChange(!value, name);
        onChange(event);
    }, [name, onChange, onValueChange, value]);
    const handleKeyDown = useCallback(function (event) {
        if (event.key !== 'Escape') {
            return;
        }
        if (propagateEscapeKeyDown === false) {
            event.stopPropagation();
        }
        event.currentTarget.blur();
    }, [propagateEscapeKeyDown]);
    return (h("label", { class: createClassName([
            styles.iconToggleButton,
            disabled === true ? styles.disabled : null
        ]) },
        h("input", { ...rest, checked: value === true, class: styles.input, disabled: disabled === true, name: name, onChange: handleChange, onKeyDown: disabled === true ? undefined : handleKeyDown, tabIndex: disabled === true ? -1 : 0, type: "checkbox" }),
        h("div", { class: styles.box },
            h("div", { class: styles.icon }, children))));
}
//# sourceMappingURL=icon-toggle-button.js.map