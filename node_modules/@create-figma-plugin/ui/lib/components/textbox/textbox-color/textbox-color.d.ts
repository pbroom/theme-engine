/// <reference types="@figma/plugin-typings" />
import { JSX } from 'preact';
import { OnValueChange, Props } from '../../../types/types.js';
export type TextboxColorProps<Name extends string, HexColorName extends string, OpacityName extends string> = {
    disabled?: boolean;
    hexColor: string;
    hexColorName?: HexColorName;
    hexColorPlaceholder?: string;
    name?: Name;
    onHexColorInput?: OmitThisParameter<JSX.GenericEventHandler<HTMLInputElement>>;
    onHexColorValueInput?: OnValueChange<string, HexColorName>;
    onOpacityInput?: OmitThisParameter<JSX.GenericEventHandler<HTMLInputElement>>;
    onOpacityNumericValueInput?: OnValueChange<null | number, OpacityName>;
    onOpacityValueInput?: OnValueChange<string, OpacityName>;
    onRgbaColorValueInput?: OnValueChange<null | RGBA, Name>;
    opacity: string;
    opacityName?: OpacityName;
    opacityPlaceholder?: string;
    propagateEscapeKeyDown?: boolean;
    revertOnEscapeKeyDown?: boolean;
    variant?: TextboxColorVariant;
};
export type TextboxColorVariant = 'border' | 'underline';
export declare function TextboxColor<Name extends string, HexColorName extends string, OpacityName extends string>({ disabled, hexColor, hexColorName, hexColorPlaceholder, name, onHexColorInput, onHexColorValueInput, onOpacityInput, onOpacityNumericValueInput, onOpacityValueInput, onRgbaColorValueInput, opacity, opacityName, opacityPlaceholder, propagateEscapeKeyDown, revertOnEscapeKeyDown, variant, ...rest }: Props<HTMLInputElement, TextboxColorProps<Name, HexColorName, OpacityName>>): JSX.Element;
//# sourceMappingURL=textbox-color.d.ts.map